{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,iBAAiB,CAAC;AAIjD,sEAAsE;AAEtE,2FAA2F;AAC3F,0EAA0E;AAC1E,MAAM;AACN,MAAM,iBAAiB,GAAG,cAAc,CAA0B,mBAAmB,CAAC,CAAC;AAEvF,cAAc,eAAe,CAAC;AAC9B,OAAO,EAAE,iBAAiB,EAAE,CAAC;AAG7B,4CAA4C;AAC5C,oEAAoE;AACpE,4DAA4D;AAC5D,sHAAsH;AACtH,wCAAwC;AACxC,0BAA0B;AAC1B,4BAA4B;AAC5B,yBAAyB;AACzB,2BAA2B;AAC3B,+EAA+E;AAC/E,KAAK;AAGL,gEAAgE;AAChE,8BAA8B;AAC9B,MAAM;AAEN,iEAAiE;AACjE,0CAA0C;AAC1C,MAAM","sourcesContent":["import { registerPlugin } from '@capacitor/core';\n// import {LensFacing , FlashMode, Orientation, Mode } from './cameraConfigEnums'\n\nimport type { TruvideoSdkCameraPlugin } from './definitions';\n// import type { CameraConfiguration } from './cameraConfigInterface';\n\n// const TruvideoSdkCamera = registerPlugin<TruvideoSdkCameraPlugin>('TruvideoSdkCamera', {\n//   web: () => import('./web').then((m) => new m.TruvideoSdkCameraWeb()),\n// });\nconst TruvideoSdkCamera = registerPlugin<TruvideoSdkCameraPlugin>('TruvideoSdkCamera');\n\nexport * from './definitions';\nexport { TruvideoSdkCamera };\n\n\n// const secretKey: CameraConfiguration  = {\n//   lensFacing: LensFacing.Front, //Front and Back option are there\n//   flashMode: FlashMode.Off,// On and Off option are there\n//   orientation: Orientation.Portrait, // Portrait, LandscapeLeft,LandscapeRight and PortraitReverse option are there\n//   outputPath: \"file://\\(outputPath)\",\n//   frontResolutions: [],\n//   frontResolution: 'nil',\n//   backResolutions: [],\n//   backResolution: 'nil',\n//   mode: Mode.Picture, // Picture,Video and VideoAndPicture options are there\n// };\n\n\n// val result = await TruvideoSdkCameraPlugin.initCameraScreen({\n//   configuration: secretKey,\n// });\n\n// TruvideoSdkCameraPlugin.addListener('cameraEvent', (data) => {\n//   console.log('Received event:', data);\n// });\n\n\n"]}