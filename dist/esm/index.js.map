{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,iBAAiB,CAAC;AAIjD,MAAM,iBAAiB,GAAG,cAAc,CAA0B,mBAAmB,CAAC,CAAC;AAEvF,cAAc,gBAAgB,CAAA;AAC9B,cAAc,qBAAqB,CAAA;AAEnC,SAAS,WAAW,CAAC,GAAQ;IAC3B,OAAO,MAAM,CAAC,WAAW,CACvB,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,SAAS,CAAC,CACtE,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,gBAAgB,CAC9B,aAAkC;IAElC,MAAM,aAAa,GAAkB,WAAW,CAAC;QAC/C,UAAU,EAAE,aAAa,CAAC,UAAU;QACpC,SAAS,EAAE,aAAa,CAAC,SAAS;QAClC,WAAW,EAAE,aAAa,CAAC,WAAW;QACtC,UAAU,EAAE,aAAa,CAAC,UAAU;QACpC,eAAe,EAAE,aAAa,CAAC,eAAe;QAC9C,cAAc,EAAE,aAAa,CAAC,cAAc;QAC5C,gBAAgB,EAAE,aAAa,CAAC,gBAAgB;QAChD,eAAe,EAAE,aAAa,CAAC,eAAe;QAC9C,IAAI,EAAE,aAAa,CAAC,IAAI;KACzB,CAAC,CAAC;IAEH,OAAO,iBAAiB,CAAC,gBAAgB,CAAC;QACxC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;KACrC,CAAC,CAAC;AACL,CAAC;AAED,MAAM,UAAU,kBAAkB,CAC9B,aAAoC;IAEpC,IAAI,IAAI,GAAG;QACP,IAAI,EAAE,aAAa,CAAC,IAAI,CAAC,IAAI;QAC7B,UAAU,EAAE,aAAa,CAAC,IAAI,CAAC,UAAU;QACzC,UAAU,EAAE,aAAa,CAAC,IAAI,CAAC,UAAU;QACzC,UAAU,EAAE,aAAa,CAAC,IAAI,CAAC,UAAU;QACzC,kBAAkB,EAAE,aAAa,CAAC,IAAI,CAAC,kBAAkB;QACzD,SAAS,EAAE,aAAa,CAAC,IAAI,CAAC,SAAS;KAC1C,CAAC;IACF,IAAI,mBAAmB,GAAoB;QACvC,UAAU,EAAE,aAAa,CAAC,UAAU;QACpC,WAAW,EAAE,aAAa,CAAC,WAAW;QACtC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;KAC7B,CAAA;IACD,OAAO,iBAAiB,CAAC,kBAAkB,CACvC,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,CACtC,CAAC;AACN,CAAC;AAED,MAAM,UAAU,gBAAgB;IAC5B,OAAO,iBAAiB,CAAC,gBAAgB,CACrC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CACrB,CAAC;AACN,CAAC;AAED,MAAM,UAAU,OAAO;IACnB,OAAO,iBAAiB,CAAC,OAAO,EAAE,CAAC;AACvC,CAAC;AAED,MAAM,UAAU,WAAW;IACvB,OAAO,iBAAiB,CAAC,WAAW,EAAE,CAAC;AAC3C,CAAC;AACD,MAAM,UAAU,2BAA2B;IACvC,OAAO,iBAAiB,CAAC,2BAA2B,EAAE,CAAC;AAC3D,CAAC;AACD,MAAM,UAAU,2BAA2B;IACvC,OAAO,iBAAiB,CAAC,2BAA2B,EAAE,CAAC;AAC3D,CAAC;AAED,MAAM,UAAU,8BAA8B;IAC1C,OAAO,iBAAiB,CAAC,8BAA8B,EAAE,CAAC;AAC9D,CAAC","sourcesContent":["import { registerPlugin } from '@capacitor/core';\n\nimport type { TruvideoSdkCameraPlugin } from './definitions';\nimport { ARCameraConfiguration, ARConfiguration, CameraConfiguration, Configuration } from './CameraConfig';\nconst TruvideoSdkCamera = registerPlugin<TruvideoSdkCameraPlugin>('TruvideoSdkCamera');\n\nexport * from './CameraConfig'\nexport * from './cameraConfigEnums'\n\nfunction cleanObject(obj: any): any {\n  return Object.fromEntries(\n    Object.entries(obj).filter(([_, v]) => v !== null && v !== undefined)\n  );\n}\n\nexport function initCameraScreen(\n  configuration: CameraConfiguration\n): Promise<{ value: string }> {\n  const cleanedConfig: Configuration = cleanObject({\n    lensFacing: configuration.lensFacing,\n    flashMode: configuration.flashMode,\n    orientation: configuration.orientation,\n    outputPath: configuration.outputPath,\n    frontResolution: configuration.frontResolution,\n    backResolution: configuration.backResolution,\n    frontResolutions: configuration.frontResolutions,\n    backResolutions: configuration.backResolutions,\n    mode: configuration.mode\n  });\n\n  return TruvideoSdkCamera.initCameraScreen({\n    value: JSON.stringify(cleanedConfig)\n  });\n}\n\nexport function initARCameraScreen(\n    configuration: ARCameraConfiguration\n): Promise<{ value: string }> {\n    let data = {\n        mode: configuration.mode.mode,\n        videoLimit: configuration.mode.videoLimit,\n        imageLimit: configuration.mode.imageLimit,\n        mediaLimit: configuration.mode.mediaLimit,\n        videoDurationLimit: configuration.mode.videoDurationLimit,\n        autoClose: configuration.mode.autoClose,\n    };\n    var cameraConfiguration: ARConfiguration = {\n        outputPath: configuration.outputPath,\n        orientation: configuration.orientation,\n        mode: JSON.stringify(data),\n    }\n    return TruvideoSdkCamera.initARCameraScreen(\n        JSON.stringify(cameraConfiguration)\n    );\n}\n\nexport function initScanerScreen(): Promise<{ value: string }> {\n    return TruvideoSdkCamera.initScanerScreen(\n        JSON.stringify(\"\")\n    );\n}\n\nexport function version(): Promise<string> {\n    return TruvideoSdkCamera.version();\n}\n\nexport function environment(): Promise<string> {\n    return TruvideoSdkCamera.environment();\n}\nexport function isAugmentedRealityInstalled(): Promise<string> {\n    return TruvideoSdkCamera.isAugmentedRealityInstalled();\n}\nexport function isAugmentedRealitySupported(): Promise<string> {\n    return TruvideoSdkCamera.isAugmentedRealitySupported();\n}\n\nexport function requestInstallAugmentedReality(): Promise<string> {\n    return TruvideoSdkCamera.requestInstallAugmentedReality();\n}\n"]}